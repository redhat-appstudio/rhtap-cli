{{- $root := . }}
{{- range $k, $v := include "infrastructure.minIOTenants.enabled" . | fromYaml }}
  {{- if $v.kafkaNotify.enabled }}
    {{- $minIOURL := printf "http://minio.%s.svc.cluster.local" $v.namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    {{- include "rhtap-infrastructure.labels" $root | nindent 4 }}
  namespace: {{ $v.namespace }}
  name: {{ printf "post-deploy-%s" $k }}
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ $root.Release.Name }}
      initContainers:
        #
        # Copying the scripts that will be used on the subsequent containers, the
        # scripts are shared via the "/scripts" volume.
        #
    {{- include "infrastructure.copyScripts" $root | nindent 8 }}
        #
        # Waiting for the MinIO Tenant to be ready.
        #
        - name: {{ printf "test-minio-tentant-%s" $k }}
          image: quay.io/codeready-toolchain/oc-client-base:latest
          env:
            - name: NAMESPACE
              value: {{ $v.namespace }}
            - name: RESOURCE_TYPE
              value: "statefulset"
          command:
            - /scripts/test-rollout-status.sh
          args:
            - {{ printf "v1.min.io/tenant=%s" $k | quote }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          securityContext:
            allowPrivilegeEscalation: false
      containers:
        #
        # MinIO Tenant Kafka notification configuration.
        #
        - name: {{ printf "minio-events-%s" $k }}
          image: quay.io/minio/minio@sha256:f95dc4fc35439654a71300f765b485e114e7a720318dbce24ccd4f324d1475cf
          env:
            - name: MINIO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $v.rootSecretName }}
                  key: username
            - name: MINIO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $v.rootSecretName }}
                  key: password
          command:
            - /bin/sh
            - -c
            - |
              set -o errexit
              set -o nounset
              set -o pipefail

              mc alias set minio "{{ $minIOURL }}" "${MINIO_USERNAME}" "${MINIO_PASSWORD}"
    {{- range $topic := $v.kafkaNotify.topics }}
              {{
                  printf "mc event add minio/%s arn:minio:sqs::%s:kafka --event \"%s\""
                  $topic.bucket
                  (upper $topic.bucket)
                  (join "," $topic.events)
              }}
    {{- end }}
              mc admin service restart minio
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: scripts
          emptyDir: {}
  {{- end }}
{{- end }}
