{{- if .Values.backingServices.argoCD.enabled }}
  {{- $argoCD := .Values.backingServices.argoCD -}}
---
apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  labels:
    app: argocd
  namespace: {{
    required ".backingServices.argoCD.namespace is required" $argoCD.namespace
  }}
  name: {{
    required ".backingServices.argoCD.name is required" $argoCD.name
  }} 
spec:
  #
  # ApplicationSet
  #
  applicationSet:
    enabled: {{ default "false" $argoCD.components.applicationSet.enabled }}
  {{- if $argoCD.components.applicationSet.enabled }}
    {{- with $argoCD.components.applicationSet.resources }}
    resources:
      {{- . | toYaml | nindent 6 }}
    {{- end }}
    webhookServer:
      ingress:
        enabled: false
      route:
        enabled: false
  {{- end }}
  #
  # Controller
  #
  controller:
    enabled: {{ default "false" $argoCD.components.controller.enabled }}
  {{- with $argoCD.components.controller.resources }}
    resources:
    {{- . | toYaml | nindent 6 }}
  {{- end }}
  #
  # Redis
  #
  redis:
    enabled: {{ default "false" $argoCD.components.redis.enabled }}
  {{- with $argoCD.components.redis.resources }}
    resources:
    {{- . | toYaml | nindent 6 }}
  {{- end }}
  #
  # Repo
  #
  repo:
    enabled: {{ default "false" $argoCD.components.repo.enabled }}
  {{- with $argoCD.components.repo.resources }}
    resources:
    {{- . | toYaml | nindent 6 }}
  {{- end }}
  #
  # Server
  #
  server:
    enabled: {{ default "false" $argoCD.components.server.enabled }}
  {{- if $argoCD.components.server.enabled }}
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    {{- with $argoCD.components.server.resources }}
    resources:
      {{- . | toYaml | nindent 6 }}
    {{- end }}
    route:
      enabled: {{ default "false" $argoCD.route.enabled }}
      {{- if $argoCD.route.enabled }}
      tls:
        {{- $argoCD.route.tls | toYaml | nindent 8 }}
      {{- end }}
  {{- end }}
  #
  # SSO
  #
  {{- with $argoCD.components.sso }}
  sso:
    {{- . | toYaml | nindent 4 }}
  {{- end }}

  #
  # Unmanaged Settings
  #

  extraConfig:
    accounts.admin: apiKey, login
  rbac:
    defaultPolicy: ''
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
    scopes: '[groups]'
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  grafana:
    enabled: false
  ha:
    enabled: false
  monitoring:
    enabled: false
  notifications:
    enabled: false
  prometheus:
    enabled: false
{{- end }}
