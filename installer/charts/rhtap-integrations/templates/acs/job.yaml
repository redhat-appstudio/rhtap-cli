{{ $integrations := .Values.integrations }}
{{- $secretACS := (lookup "v1" "Secret" .Release.Namespace "rhtap-acs-integration") }}
{{- if $secretACS }}
#
# Setup ACS integrations.
# The integration is managed only for products installed by the installer.
# I.e. if the both the ACS instance and the image registry are not managed
# by the installer, it is the Platform Engineer's responsibility to ensure
# the services are connected.
#
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    {{- include "rhtap-integrations.labels" . | nindent 4 }}
  name: rhtap-acs-integrations
spec:
  template:
    spec:
      serviceAccountName: {{ .Release.Name }}
      restartPolicy: Never
      initContainers:
        #
        # Copying the scripts that will be used on the subsequent containers, the
        # scripts are shared via the "/scripts" volume.
        #
  {{- include "integrations.copyScripts" . | nindent 8 }}
      containers:
      {{- $secretArtifactory := (lookup "v1" "Secret" .Release.Namespace "rhtap-artifactory-integration") }}
      {{- if and $integrations.acs.enabled $secretArtifactory }}
        #
        # Create the Artifactory integration.
        #
        - name: artifactory-integration
          image: quay.io/codeready-toolchain/oc-client-base:latest
          env:
            - name: ROX_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: rhtap-acs-integration
                  key: token
            - name: ROX_CENTRAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: rhtap-acs-integration
                  key: endpoint
          command:
            - /scripts/acs-integration-helper.sh
            - artifactory
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          securityContext:
            allowPrivilegeEscalation: false
      {{- end }}
      {{- $secretNexus := (lookup "v1" "Secret" .Release.Namespace "rhtap-nexus-integration") }}
      {{- if and $integrations.acs.enabled $secretArtifactory }}
        #
        # Create the Nexus integration.
        #
        - name: nexus-integration
          image: quay.io/codeready-toolchain/oc-client-base:latest
          env:
            - name: ROX_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: rhtap-acs-integration
                  key: token
            - name: ROX_CENTRAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: rhtap-acs-integration
                  key: endpoint
          command:
            - /scripts/acs-integration-helper.sh
            - nexus
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          securityContext:
            allowPrivilegeEscalation: false
      {{- end }}
      {{- $secretQuay := (lookup "v1" "Secret" .Release.Namespace "rhtap-quay-integration") }}
      {{- if and (or $integrations.acs.enabled $integrations.quay.enabled) $secretQuay }}
        #
        # Create the Quay integration.
        #
        - name: quay-integration
          image: quay.io/codeready-toolchain/oc-client-base:latest
          env:
            - name: ROX_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: rhtap-acs-integration
                  key: token
            - name: ROX_CENTRAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: rhtap-acs-integration
                  key: endpoint
          command:
            - /scripts/acs-integration-helper.sh
            - quay
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          securityContext:
            allowPrivilegeEscalation: false
      {{- end }}
        #
        # Make sure there's at least one container
        #
        - name: no-op
          image: quay.io/codeready-toolchain/oc-client-base:latest
          command:
            - bash
            - -c
            - "echo 'No op: Success'"
          requests:
            cpu: 125m
            memory: 128Mi
            ephemeral-storage: "100Mi"
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: scripts
          emptyDir: {}
{{- end }}