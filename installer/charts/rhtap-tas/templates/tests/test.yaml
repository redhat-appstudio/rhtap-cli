{{- $secureSign := .Values.trustedArtifactSigner.secureSign -}}
{{- if $secureSign.enabled }}
  {{- $keycloak := .Values.trustedArtifactSigner.keycloakRealmImport -}}
  {{- $name := printf "%s-test-%d" .Chart.Name .Release.Revision -}}
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    {{- include "rhtap-tas.labels" . | nindent 4 }}
  name: {{ $name }} 
spec:
  restartPolicy: Never
  serviceAccountName: {{ .Release.Name }}
  initContainers:
    - name: copy-scripts
      image: registry.access.redhat.com/ubi8/ubi-minimal:latest
      workingDir: /scripts
      command:
        - /bin/bash
        - -c
        - |
          set -x -e
  {{- range $path, $content := .Files.Glob "scripts/*.sh" -}}
   {{- $name := trimPrefix "scripts/" $path }}
          printf '%s' "{{ $content | toString | b64enc }}" | base64 -d >{{ $name }}
          chmod +x {{ $name }}
  {{- end }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
  containers:
    - name: {{ printf "%s-statefulsets" $name }}
      image: quay.io/codeready-toolchain/oc-client-base:latest
      env:
        - name: NAMESPACE
          value: {{ $secureSign.namespace }}
        - name: RESOURCE_TYPE
          value: "deployment"
      command:
        - /scripts/test-rollout-status.sh
      args:
        - {{ printf "app.kubernetes.io/instance=%s"  $secureSign.name }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
  {{- if $keycloak.enabled }}
    - name: {{ printf "%s-realm" $name }}
      image: quay.io/codeready-toolchain/oc-client-base:latest
      env:
        - name: NAMESPACE
          value: {{ $keycloak.keycloakCR.namespace }}
      command:
        - /scripts/test-keycloakrealmimport.sh
      args:
        - "trusted-artifact-signer"
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
  {{- end }}
  volumes:
    - name: scripts
      emptyDir: {}
{{- end }}
