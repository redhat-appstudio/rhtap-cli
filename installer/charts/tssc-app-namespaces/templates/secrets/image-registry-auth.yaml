{{- $namespace := .Release.Namespace }}

# Merge the image repositories secrets into a single value
{{- $dockerconfigjson := dict }}
{{- $dockerconfigjsonreadonly := dict }}
{{- range (tuple "artifactory" "nexus" "quay") }}
  {{- $secretName := printf "rhtap-%s-integration" . }}
  {{- $secretObj := (lookup "v1" "Secret" $namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $secretContent := (get $secretData ".dockerconfigjson" | b64dec ) | default "{}" | fromJson }}
  {{- $readonlysecretContent := (get $secretData ".dockerconfigjsonreadonly" | b64dec ) | default "{}" | fromJson }}
  {{- $dockerconfigjson := merge $dockerconfigjson $secretContent }}
  {{- $dockerconfigjsonreadonly := merge $dockerconfigjsonreadonly $readonlysecretContent }}
{{- end }}

# Create the unified secret, or fail if the secret is empty
{{- if not $dockerconfigjson }}
  {{- required (printf "Did not find any image repository integrations in %s" $namespace) "" }}
{{- end }}
{{- range .Values.appNamespaces.namespace_prefixes }}
  {{- $namespace := . }}
  {{- range tuple "ci" "development" "prod" "stage" }}
---
kind: Secret
type: kubernetes.io/dockerconfigjson
apiVersion: v1
metadata:
  name: rhtap-image-registry-auth
  namespace: {{ $namespace }}-{{ . }}
stringData:
    {{- if and $dockerconfigjsonreadonly (ne . "ci") }}
  .dockerconfigjson: '{{ $dockerconfigjsonreadonly | toJson }}'
    {{- else }}
  .dockerconfigjson: '{{ $dockerconfigjson | toJson }}'
    {{- end }}
  {{- end }}
{{- end }}
