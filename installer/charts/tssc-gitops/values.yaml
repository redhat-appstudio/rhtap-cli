---
argoCD:
  # Toggles the ArgoCD service.
  enabled: false
  # ArgoCD instance name, which used in combination with the cluster's
  # application ingress host defines the final ArgoCD's route.
  name: __OVERWRITE_ME__
  # The namespace to deploy ArgoCD instances.
  namespace: __OVERWRITE_ME__
  # The domain for the ArgoCD instance, used to define the final route.
  ingressDomain: __OVERWRITE_ME__
  # The secret namespace to store the ArgoCD API credentials, this secret is later on
  # used for integration with other services.
  integrationSecret:
    name: __OVERWRITE_ME__
    namespace: __OVERWRITE_ME__
  # Route configuration for all ArgoCD components.
  route:
    # Toggles the route for the ArgoCD components.
    enabled: true
    # TLS configuration for the ArgoCD components route.
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
  # Describes the ArgoCD components managed by this chart. Each component can be
  # toggled using the enabled flag.
  components: 
    # ArgoCD Applications controller.
    applicationSet:
      enabled: true
      resources:
        limits:
          cpu: 250m
          memory: 1Gi
        requests:
          cpu: 125m
          memory: 512Mi
    # ArgoCD controller, which is responsible for the reconciliation of the
    # repositories with the cluster state.
    controller:
      enabled: true
      resources:
        limits:
          memory: 6Gi
        requests:
          memory: 3Gi
    # ArgoCD Redis, which is used as a cache for the operational data.
    redis:
      enabled: true
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 125m
          memory: 128Mi
    # ArgoCD repository, which is used to store the application manifests.
    repo:
      enabled: true
      resources:
        limits:
          cpu: 250m
          memory: 1Gi
        requests:
          cpu: 125m
          memory: 256Mi
    # ArgoCD server, which is the main component of the ArgoCD.
    server:
      enabled: true
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 125m
          memory: 128Mi
    # ArgoCD single sign on (SSO) configuration. Runs as a standalone POD and
    # thus has its own resources limits.
    sso:
      provider: dex
      dex:
        openShiftOAuth: true
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 125m
            memory: 128Mi
