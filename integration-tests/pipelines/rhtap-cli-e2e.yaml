---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: rhtap-install-e2e
spec:
  description: |-
    This pipeline automates the process of running end-to-end tests for TSSC
    using a ROSA (Red Hat OpenShift Service on AWS) cluster. The pipeline provisions
    the ROSA cluster, installs TSSC using the installer, runs the tests, collects artifacts,
    and finally deprovisions the ROSA cluster.
  params:
    - name: test-name
      description: 'The name of the test corresponding to a defined Konflux integration test.'
      default: ''
      type: string
    - name: ocp-version
      description: 'The OpenShift version to use for the ephemeral cluster deployment.'
      type: string
    - name: cloud-credential-key
      type: string
      description: The key secret from konflux-test-infra-secret where all AWS ROSA configurations are stored.
    - name: replicas
      description: 'The number of replicas for the cluster nodes.'
      default: "3"
      type: string
    - name: machine-type
      description: 'The type of machine to use for the cluster nodes.'
      default: "m6i.4xlarge"
      type: string
    - name: oci-container-repo
      default: 'quay.io/konflux-test-storage/rhtap-team/rhtap-cli'
      description: The ORAS container used to store all test artifacts.
      type: string
    - name: oci-container-expiration
      type: string
      default: 30d
      description: Change default expiration of image from 1y to 30 days - https://github.com/konflux-ci/tekton-integration-catalog/blob/main/common/tasks/create-oci-artifact/0.1/create-oci-artifact.yaml#L23
    - name: job-spec
      type: string
    - name: konflux-test-infra-secret
      description: The name of secret where testing infrastructures credentials are stored.
      type: string
    - name: rhads-config
      type: string
      description: "The rhads-config file in string format."
    - name: tssc-image
      type: string
      description: "Image from where the `tssc` binary will be extracted (from path /usr/local/bin)."
      default: "quay.io/rhtap/rhtap-cli:latest"
    - name: tssc-test-image
      type: string
      description: "Image from where the `tssc-test` binary will be extracted (from path /usr/local/bin)."
      default: "quay.io/redhat-user-workloads/rhtap-shared-team-tenant/tssc-test:latest"
  tasks:
    - name: rosa-hcp-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/konflux-qe-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/rosa/hosted-cp/rosa-hcp-metadata/rosa-hcp-metadata.yaml
    - name: create-oci-container
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/konflux-qe-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/create-oci-artifact/0.1/create-oci-artifact.yaml
      params:
        - name: oci-container-repo
          value: $(params.oci-container-repo)
        - name: oci-container-expiration
          value: $(params.oci-container-expiration)
        - name: oci-container-tag
          value: $(context.pipelineRun.name)
    - name: provision-rosa
      runAfter:
        - rosa-hcp-metadata
        - create-oci-container
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/konflux-qe-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/rosa/hosted-cp/rosa-hcp-provision/rosa-hcp-provision.yaml
      params:
        - name: cluster-name
          value: "$(tasks.rosa-hcp-metadata.results.cluster-name)"
        - name: ocp-version
          value: "$(params.ocp-version)"
        - name: replicas
          value: "$(params.replicas)"
        - name: machine-type
          value: "$(params.machine-type)"
        - name: konflux-test-infra-secret
          value: "$(params.konflux-test-infra-secret)"
        - name: cloud-credential-key
          value: "$(params.cloud-credential-key)"
    - name: rhtap-install
      runAfter:
        - provision-rosa
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/redhat-appstudio/rhtap-cli.git
          - name: revision
            value: main
          - name: pathInRepo
            value: integration-tests/tasks/rhtap-install.yaml
      params:
        - name: ocp-login-command
          value: "$(tasks.provision-rosa.results.ocp-login-command)"
        - name: job-spec
          value: "$(params.job-spec)"
        - name: rhads-config
          value: $(params.rhads-config)
        - name: tssc-image
          value: $(params.tssc-image)
    - name: sprayproxy-provision
      runAfter:
        - rhtap-install
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/konflux-qe-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/sprayproxy/sprayproxy-provision/sprayproxy-register-server.yaml
      params:
        - name: ocp-login-command
          value: "$(tasks.provision-rosa.results.ocp-login-command)"
    - name: rhtap-e2e-tests
      runAfter:
        - sprayproxy-provision
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/chetna14manku/tssc-test.git
          - name: revision
            value: fix-registry-org
          - name: pathInRepo
            value: integration-tests/tasks/tssc-e2e.yaml
      params:
        - name: job-spec
          value: $(params.job-spec)
        - name: ocp-login-command
          value: "$(tasks.provision-rosa.results.ocp-login-command)"
        - name: oci-container
          value: $(tasks.create-oci-container.results.oci-container)
        - name: tssc-test-image
          value: quay.io/redhat-user-workloads/rhtap-shared-team-tenant/tssc-test@sha256:6d1c82a2d4cb29d0310c58ba2b79ec102991baa9cdc1afb68588155509cab06c
  finally:
    - name: deprovision-rosa-collect-artifacts
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/rosa/hosted-cp/rosa-hcp-deprovision/rosa-hcp-deprovision.yaml
      params:
        - name: test-name
          value: $(context.pipelineRun.name)
        - name: ocp-login-command
          value: "$(tasks.provision-rosa.results.ocp-login-command)"
        - name: oci-container
          value: "$(tasks.create-oci-container.results.oci-container)"
        - name: cluster-name
          value: "$(tasks.rosa-hcp-metadata.results.cluster-name)"
        - name: konflux-test-infra-secret
          value: "$(params.konflux-test-infra-secret)"
        - name: cloud-credential-key
          value: "$(params.cloud-credential-key)"
        - name: pipeline-aggregate-status
          value: "$(tasks.status)"
    - name: sprayproxy-deprovision
      when:
        - input: "$(tasks.sprayproxy-provision.status)"
          operator: in
          values:
            - "Succeeded"
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/sprayproxy/sprayproxy-deprovision/sprayproxy-unregister-server.yaml
      params:
        - name: ocp-login-command
          value: "$(tasks.provision-rosa.results.ocp-login-command)"
    - name: pull-request-status-message
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/pull-request-comment/0.2/pull-request-comment.yaml
      params:
        - name: test-name
          value: "$(context.pipelineRun.name)"
        - name: oci-container
          value: "$(tasks.create-oci-container.results.oci-container)"
        - name: pipeline-aggregate-status
          value: "$(tasks.status)"
        - name: job-spec
          value: "$(params.job-spec)"
