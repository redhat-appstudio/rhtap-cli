---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: rhtap-install
spec:
  params:
    - name: ocp-login-command
      type: string
      description: ""
    - name: git-repo
      type: string
      default: "rhtap-installer"
    - name: git-url
      type: string
      default: "https://github.com/redhat-appstudio/rhtap-cli.git"
    - name: git-revision
      type: string
      default: "main"
  volumes:
    - name: rhtap-cli-volume
      secret:
        secretName: rhtap-cli-install
  steps:
    - name: install
      image: quay.io/rhtap/rhtap-e2e:latest
      volumeMounts:
        - name: rhtap-cli-volume
          mountPath: /usr/local/rhtap-cli-install
      script: |
        #!/bin/sh
        set -o errexit
        set -o nounset
        set -o pipefail

        # Login to OpenShift
        export KUBECONFIG=$(pwd)/kubeconfig
        echo $(params.ocp-login-command)
        $(params.ocp-login-command)

        export GITHUB__APP__ID GITHUB__APP__CLIENT__ID GITHUB__APP__CLIENT__SECRET \
        GITHUB__APP__PRIVATE_KEY GITOPS__GIT_TOKEN GITHUB \
        GITHUB__APP__WEBHOOK__SECRET GITLAB__TOKEN JENKINS_API_TOKEN JENKINS_URL JENKINS_USERNAME

        # Clone the rhtap-cli repository
        cd "$(mktemp -d)"
        echo -e "INFO: cloning repo name '$(params.git-repo)' with revision '$(params.git-revision)' from url '$(params.git-url)'"
        git clone "$(params.git-url)" .
        git checkout "$(params.git-revision)"

        # Path to your values.yaml.tpl file
        tpl_file="installer/charts/values.yaml.tpl"

        # Turn ci to true
        sed -i 's/ci: false/ci: true/' $tpl_file

        # Configure to integerate with existing GitHub App
        GITHUB__APP__ID=$(cat /usr/local/rhtap-cli-install/rhdh-github-app-id)
        GITHUB__APP__CLIENT__ID=$(cat /usr/local/rhtap-cli-install/rhdh-github-client-id)
        GITHUB__APP__CLIENT__SECRET=$(cat /usr/local/rhtap-cli-install/rhdh-github-client-secret)
        GITHUB__APP__PRIVATE_KEY=$(base64 -d < /usr/local/rhtap-cli-install/rhdh-github-private-key | sed 's/^/        /')
        GITOPS__GIT_TOKEN=$(cat /usr/local/rhtap-cli-install/github_token)
        GITHUB__APP__WEBHOOK__SECRET=$(cat /usr/local/rhtap-cli-install/rhdh-github-webhook-secret)
        GITLAB__TOKEN=$(cat /usr/local/rhtap-cli-install/gitlab_token)

        # Update the developer hub catalog URL
        DEVELOPER_HUB__CATALOG__URL="https://github.com/redhat-appstudio/tssc-sample-templates/blob/main/all.yaml"
        yq e ".rhtapCLI.features.redHatDeveloperHub.properties.catalogURL = \"${DEVELOPER_HUB__CATALOG__URL}\"" -i installer/config.yaml

        cat <<EOF >> "$tpl_file"
        integrations:
          github:
            id: "${GITHUB__APP__ID}"
            clientId: "${GITHUB__APP__CLIENT__ID}"
            clientSecret: "${GITHUB__APP__CLIENT__SECRET}"
            publicKey: |-
        $(echo "${GITHUB__APP__PRIVATE_KEY}" | sed 's/^/      /')
            token: "${GITOPS__GIT_TOKEN}"
            webhookSecret: "${GITHUB__APP__WEBHOOK__SECRET}"
        EOF

        echo "make build"
        make build

        echo "[INFO]Perform rhtap-cli to install RHTAP"
        JENKINS_API_TOKEN=$(cat /usr/local/rhtap-cli-install/jenkins-api-token)
        JENKINS_URL=$(cat /usr/local/rhtap-cli-install/jenkins-url)
        JENKINS_USERNAME=$(cat /usr/local/rhtap-cli-install/jenkins-username)

        ./bin/rhtap-cli integration --kube-config "$KUBECONFIG" jenkins --token="$JENKINS_API_TOKEN"  --url="$JENKINS_URL" --username="$JENKINS_USERNAME" --force
        ./bin/rhtap-cli integration --kube-config "$KUBECONFIG" gitlab --token "${GITLAB__TOKEN}"
        ./bin/rhtap-cli deploy --timeout 25m --embedded false --config installer/config.yaml --kube-config "$KUBECONFIG"

        homepage_url=https://$(kubectl -n rhtap get route backstage-developer-hub -o  'jsonpath={.spec.host}')
        callback_url=https://$(kubectl -n rhtap get route backstage-developer-hub -o  'jsonpath={.spec.host}')/api/auth/github/handler/frame
        webhook_url=https://$(kubectl -n openshift-pipelines get route pipelines-as-code-controller -o 'jsonpath={.spec.host}')
        acs_central_url=https://$(kubectl -n rhtap-acs get route central -o  'jsonpath={.spec.host}')
        acs_central_password=$(kubectl -n rhtap-acs get secret central-htpasswd -o go-template='{{index .data "password" | base64decode}}')
        quay_host=$(kubectl -n rhtap-quay get route rhtap-quay-quay -o  'jsonpath={.spec.host}')
        quay_username=$(kubectl -n rhtap-quay get secret rhtap-quay-super-user -o go-template='{{index .data "username" | base64decode}}')
        quay_password=$(kubectl -n rhtap-quay get secret rhtap-quay-super-user -o go-template='{{index .data "password" | base64decode}}')

        echo "[INFO]homepage_url=$homepage_url"
        echo "[INFO]callback_url=$callback_url"
        echo "[INFO]webhook_url=$webhook_url"
        # echo "[INFO]acs_central_url=$acs_central_url"
        # echo "[INFO]acs_central_password=$acs_central_password"
        # echo "[INFO]quay_host=$quay_host"
        # echo "[INFO]quay_username=$quay_username"
        # echo "[INFO]quay_password=$quay_password"

        echo "[INFO] Config quay integration in ACS"
        curl -k -X POST "$acs_central_url"/v1/imageintegrations  -u admin:"$acs_central_password" \
          -d  '{"id":"","name":"rhtap-quay","categories":["REGISTRY"],"quay":{"endpoint":"'"${quay_host}"'","oauthToken":"","insecure":false,"registryRobotCredentials":{"username":"'"${quay_username}"'","password":"'"${quay_password}"'"}},"autogenerated":false,"clusterId":"","skipTestIntegration":true,"type":"quay"}'
